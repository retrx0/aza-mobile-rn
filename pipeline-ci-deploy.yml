trigger:
  - feature/*
  - develop

pr:
  autoCancel: true
  drafts: false

variables:
  - group: expo-variable-group 20-Jan

stages:
  - stage: build_and_test
    displayName: Build and Test
    pool:
      vmImage: "macos-latest"
    jobs:
      - job: build
        displayName: Build
        steps:
          - checkout: self
            clean: true
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: Install Node.js
          - bash: |
              set -x
              npm install -g expo-cli
              npm install -g eas-cli
            displayName: Install pipeline dependencies
          - bash: |
              set -x
              expo login -u $(SHARED_EXPO_USERNAME) -p $(SHARED_EXPO_PASSWORD) --non-interactive
            displayName: Login to expo cli
          - bash: yarn install --frozen-lockfile
            displayName: Yarn install
          - bash: |
              set -x
            #    yarn testFinal
            displayName: Run Unit Tests
          # - bash: |
          #     eas update:configure --platform all
          #   displayName: Configure EAS update
          #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
          # - bash: |
          #     eas update --branch develop --message dev-expo-bau --non-interactive
          #   displayName: Publish app to expo default channel
          #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
          # - bash: |
          #     expo send -s abdulrahmaniliyasu86@gmail.com
          #   displayName: Send expo link to users
          #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testRunner: JUnit
              testResultsFiles: "**/junit.xml"
# image: node:alpine
# definitions:
#   caches:
#     npm: ~/.npm
# pipelines:
#   default:
#     - parallel:
#         - step:
#             name: Run tests
#             script:
#               - npm ci
#               - npm run ci-test
#         - step:
#             name: Analyse code
#             script:
#               - npm ci
#               - npm run ci-lint
#   branches:
#     develop:
#       - parallel:
#           - step:
#               name: Run tests
#               script:
#                 - npm ci
#                 - npm run ci-test
#           - step:
#               name: Analyse code
#               script:
#                 - npm ci
#                 - npm run ci-lint
#       - step:
#           name: Create new release
#           trigger: manual
#           caches:
#             - npm
#           script:
#             - apk add --no-cache git openssh-client
#             - npm ci
#             - npx semantic-release
#     master:
#       - parallel:
#           - step:
#               name: Run tests
#               script:
#                 - npm ci
#                 - npm run ci-test
#           - step:
#               name: Analyse code
#               script:
#                 - npm ci
#                 - npm run ci-lint
#       - step:
#           name: Deploy to Expo
#           trigger: manual
#           deployment: production
#           caches:
#             - npm
#           script:
#             - cp app.production.json app.json
#             - apk add --no-cache bash
#             - npm ci
#             - npx expo login --username $EXPO_USERNAME --password $EXPO_PASSWORD
#             - npx expo publish
#     staging:
#       - parallel:
#           - step:
#               name: Run tests
#               script:
#                 - npm ci
#                 - npm run ci-test
#           - step:
#               name: Analyse code
#               script:
#                 - npm ci
#                 - npm run ci-lint
#       - step:
#           name: Deploy to Expo
#           trigger: manual
#           deployment: staging
#           caches:
#             - npm
#           script:
#             - cp app.staging.json app.json
#             - apk add --no-cache bash
#             - npm ci
#             - npx expo login --username $EXPO_USERNAME --password $EXPO_PASSWORD
#             - npx expo publish
