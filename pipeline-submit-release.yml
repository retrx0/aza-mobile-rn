trigger:
  branches:
    include:
      - main
      - release/*
      - hotfix/*

pr:
  autoCancel: true
  drafts: false

variables:
  - group: expo-variable-group 20-Jan

stages:
  - stage: build_and_test
    displayName: Build and Test
    pool:
      vmImage: "macos-latest"
    jobs:
      - job: build
        displayName: Build
        steps:
          - checkout: self
            clean: true
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: Install Node.js
          - bash: |
              set -x
              npm install -g expo-cli
              npm install -g eas-cli
            displayName: Install pipeline dependencies
          - bash: |
              set -x
              expo login -u $(SHARED_EXPO_USERNAME) -p $(SHARED_EXPO_PASSWORD) --non-interactive
            displayName: Login to expo cli
          - bash: yarn install --frozen-lockfile
            displayName: Yarn install
          - bash: |
              set -x
              yarn testFinal
            displayName: Run Unit Tests
          # - bash: |
          #     eas build --platform android --profile buildForDetoxTesting --local
          #   displayName: Build Android .aap for UI Testing on Azure MacOS Agent
          #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          - bash: |
              eas build --platform android --profile production --non-interactive --no-wait
            displayName: Run Build Android on EAS to have .aap available on website too
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          # - bash: |
          #     eas build --platform ios --profile buildForDetoxTesting --local
          #   displayName: Build IOS .ipa for UI Testing on Azure MacOS Agent
          #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          - bash: |
              eas build --platform ios --profile production --non-interactive --no-wait
            displayName: Run Build IOS on EAS to have .app available on website too
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          - bash: |
              eas submit -p ios --latest --profile production
            displayName: Submit IOS on EAS to App Store
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          - bash: |
              eas submit -p android --latest --profile production
            displayName: Submit IOS on EAS to App Store
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          # - bash: |
          #     eas update --branch releases/* --non-interactive
          #   displayName: Publish app to expo default channel
          #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testRunner: JUnit
              testResultsFiles: "**/junit.xml"
